type User @goModel(model: "github.com/penthious/go-gql-meetup/models.User") {
    id: ID!
    username: String!
    email: String!
#    createdAt: Time!
#    updatedAt: Time!
#    deleatedAt: Time!

    meetups: [Meetup!]! @goField(forceResolver: true)
}

input RegisterPayload @goModel(model: "github.com/penthious/go-gql-meetup/models.RegisterPayload") {
    username: String! @length(min: 3, max: 255)
    email: String!
    password: String!
    confirm_password: String!
}

input LoginPayload @goModel(model: "github.com/penthious/go-gql-meetup/models.LoginPayload") {
    email: String!
    password: String!
}

type Query {
    users: [User!]!
    user(id: ID!): User!
}

type Mutation {
    register(input: RegisterPayload!): User!
    login(input: LoginPayload!): User!
}
