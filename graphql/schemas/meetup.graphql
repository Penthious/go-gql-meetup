type Meetup @goModel(model: "github.com/penthious/go-gql-meetup/models.Meetup") {
    id: ID!
    name: String!
    description: String!
    user: User! @goField(forceResolver: true)
}

input NewMeetup @goModel(model: "github.com/penthious/go-gql-meetup/models.NewMeetup") {
    name: String! @length(min: 3)
    description: String! @length(min: 3)
}

input UpdateMeetup @goModel(model: "github.com/penthious/go-gql-meetup/models.UpdateMeetup") {
    name: String @length(min: 3)
    description: String @length(min: 3)
}

input MeetupFilter @goModel(model: "github.com/penthious/go-gql-meetup/models.MeetupFilter") {
    name: String
    description: String
}

extend type Query {
    meetups(filter: MeetupFilter): [Meetup!]!
}

type Mutation {
    createMeetup(input: NewMeetup!): Meetup!
    updateMeetup(id: ID!, input: UpdateMeetup!): Meetup!
    deleteMeetup(id: ID!): Boolean!
}
